{"version":3,"file":"static/js/82.e5525cef.chunk.js","mappings":"2JA0FA,UAvFoC,WAClC,IAAAA,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAoDL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3DE,EAAkBD,EAAA,GAAEE,EAAqBF,EAAA,GAC1CG,GAAgBC,EAAAA,EAAAA,QAAO,OAE7BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMb,iBACRC,GAAkB,GAClBQ,EAASK,UAAUD,EAAME,QAE7B,GACF,IAMA,OAJIT,EAAcU,SAChBP,EAASQ,QAAQX,EAAcU,SAG1B,WACDV,EAAcU,SAChBP,EAASK,UAAUR,EAAcU,QAErC,CACF,GAAG,KAEHR,EAAAA,EAAAA,YAAU,WACJR,GACFK,EAAsBa,0CAE1B,GAAG,CAAClB,IAsBJ,OACEmB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACVE,IAAKhB,EACLiB,MAAO,CAAEC,gBAAgB,OAADC,OAASrB,GAAsB,GAAE,MAAMiB,UAE/DK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,mBAAkBC,SAAA,EAC/BK,EAAAA,EAAAA,MAAA,UAAQN,UAAU,SAASO,QA5BX,WACtB,IAAMC,EAAiBC,SAASC,eAAe,WAC3CF,GACFA,EAAeG,eAAe,CAAEC,SAAU,UAE9C,EAuB4DX,SAAA,EAClDF,EAAAA,EAAAA,KAAA,OAAKc,IAAKjC,EAAiBkB,sDAAmE,GAAIgB,IAAI,WAAWd,UAAU,iBAC3HD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,gBAE/BK,EAAAA,EAAAA,MAAA,UAAQN,UAAU,SAASO,QAzBhB,WAEjBQ,OAAOC,KADWlB,yCACK,SACzB,EAsBuDG,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,OAAKc,IAAKjC,EAAiBkB,sDAAmE,GAAIgB,IAAI,WAAWd,UAAU,iBAC3HD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,eAE/BK,EAAAA,EAAAA,MAAA,UAAQN,UAAU,SAASO,QAxBV,WACvB,IAGMU,EAAU,UAAAZ,OAHF,+BAGoB,aAAAA,OAAYa,mBAF9B,gBAEyD,UAAAb,OAASa,mBADrE,kDAEbH,OAAOC,KAAKC,EACd,EAkB6DhB,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAAKc,IAAKjC,EAAiBkB,sDAAmE,GAAIgB,IAAI,WAAWd,UAAU,iBAC3HD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,mBAG/BK,EAAAA,EAAAA,MAAA,OAAKN,UAAU,gBAAeC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,KAAGoB,KAAK,yCAAyCxB,OAAO,SAASyB,IAAI,sBAAqBnB,UACxFF,EAAAA,EAAAA,KAAA,OAAKc,IAAKjC,EAAiBkB,2CAAwD,GAAIgB,IAAI,SAASd,UAAU,aAEhHD,EAAAA,EAAAA,KAAA,KAAGoB,KAAK,4CAA4CxB,OAAO,SAASyB,IAAI,sBAAqBnB,UAC3FF,EAAAA,EAAAA,KAAA,OAAKc,IAAKjC,EAAiBkB,4CAAyD,GAAIgB,IAAI,SAASd,UAAU,qBAO7H,C","sources":["CoderRightBackgroundAndText.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './rightBackgroundAndText.css';\n\nconst CoderRightBackgroundAndText = () => {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const [rightBackgroundSrc, setRightBackgroundSrc] = useState(null);\n  const backgroundRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          setIsIntersecting(true);\n          observer.unobserve(entry.target);\n        }\n      });\n    });\n\n    if (backgroundRef.current) {\n      observer.observe(backgroundRef.current);\n    }\n\n    return () => {\n      if (backgroundRef.current) {\n        observer.unobserve(backgroundRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setRightBackgroundSrc(process.env.PUBLIC_URL + '/external/coder-right.png');\n    }\n  }, [isIntersecting]);\n\n  const scrollToProfile = () => {\n    const profileSection = document.getElementById('profile');\n    if (profileSection) {\n      profileSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const openResume = () => {\n    const resumeUrl = process.env.PUBLIC_URL + '/external/Sid_Resume.pdf'; \n    window.open(resumeUrl, '_blank'); \n  };\n\n  const openGmailCompose = () => {\n    const email = 'sivaprasadsidharth@gmail.com'; \n    const subject = 'Get In Touch'; \n    const body = 'Hello, I would like to get in touch with you.'; \n    const mailtoLink = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    window.open(mailtoLink);\n  };\n\n  return (\n    <div className=\"rightBackgroundAndText\">\n      <div\n        className=\"background_right\"\n        ref={backgroundRef}\n        style={{ backgroundImage: `url(${rightBackgroundSrc || ''})` }}\n      >\n        <div className=\"buttonsContainer\">\n          <button className=\"button\" onClick={scrollToProfile}>\n            <img src={isIntersecting ? process.env.PUBLIC_URL + '/external/rectangle3260-i56d-200h.png' : ''} alt=\"Button 1\" className=\"buttonImage\" />\n            <span className=\"buttonText\">Profile</span>\n          </button>\n          <button className=\"button\" onClick={openResume}>\n            <img src={isIntersecting ? process.env.PUBLIC_URL + '/external/rectangle3260-i56d-200h.png' : ''} alt=\"Button 2\" className=\"buttonImage\" />\n            <span className=\"buttonText\">Resume</span>\n          </button>\n          <button className=\"button\" onClick={openGmailCompose}>\n            <img src={isIntersecting ? process.env.PUBLIC_URL + '/external/rectangle3260-i56d-200h.png' : ''} alt=\"Button 3\" className=\"buttonImage\" />\n            <span className=\"buttonText\">Contact Me</span>\n          </button>\n\n          <div className=\"iconContainer\">\n            <a href='https://github.com/Sidharth-Sivaprasad' target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src={isIntersecting ? process.env.PUBLIC_URL + '/external/icone-github.png' : ''} alt=\"Icon 1\" className=\"icon1\" />\n            </a>\n            <a href='https://www.linkedin.com/in/sidharth-k-s/' target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src={isIntersecting ? process.env.PUBLIC_URL + '/external/linkedin-icon.png' : ''} alt=\"Icon 2\" className=\"icon1\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CoderRightBackgroundAndText;\n"],"names":["_useState","useState","_useState2","_slicedToArray","isIntersecting","setIsIntersecting","_useState3","_useState4","rightBackgroundSrc","setRightBackgroundSrc","backgroundRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","unobserve","target","current","observe","process","_jsx","className","children","ref","style","backgroundImage","concat","_jsxs","onClick","profileSection","document","getElementById","scrollIntoView","behavior","src","alt","window","open","mailtoLink","encodeURIComponent","href","rel"],"sourceRoot":""}